#import 'lib/utils.js'

var selectedArtboard
var ON_THE_RIGHT = 0
var BELOW = 1

function generateBreakpoints(breakpointsInfo) {
	var breakpointX = [breakpointsInfo objectForKey:@"xPosition"]
	var breakpointY = [breakpointsInfo objectForKey:@"yPosition"]
	var breakpointsWidth = [breakpointsInfo objectForKey:@"breakpointsWidth"]
	var artboardWidth = [breakpointsInfo objectForKey:@"artboardWidth"]
	var artboardHeight = [breakpointsInfo objectForKey:@"artboardHeight"]

	for (var i=0; i < [breakpointsWidth count]; i++) {
		var breakpointWidth = [breakpointsWidth objectAtIndex:i]
		var columnWidth = Math.round([breakpointsInfo objectForKey:@"columnWidth"] * breakpointWidth / [breakpointsInfo objectForKey:@"layoutWidth"])
		var gutterWidth = Math.round(breakpointWidth / [breakpointsInfo objectForKey:@"numberOfColumns"] - columnWidth)
		var horizontalOffset = gutterWidth * 5

		if ([breakpointsInfo objectForKey:@"breakpointsLocation"] == ON_THE_RIGHT)
    		breakpointX += artboardWidth + 150
    	else
    		breakpointY += artboardHeight + 150

		artboardWidth = breakpointWidth + horizontalOffset * 2

		var artboard = createArtboard("Breakpoint - " + breakpointWidth + "px",artboardHeight,artboardWidth,breakpointX,breakpointY)

		setLayoutSettings(artboard, [breakpointsInfo objectForKey:@"originalLayout"], breakpointWidth, [breakpointsInfo objectForKey:@"numberOfColumns"], columnWidth, horizontalOffset)
	}
}

function handleBreakpointNumberDialog(breakpointsSelect, breakpointsLocationSelect, responseCode) {
	if (responseCode == 1000) {
		showBreakpointWidthDialog(breakpointsSelect, breakpointsLocationSelect)
	}
}

function handleBreakpointWidthDialogResponse(alert, numberOfBreakpoints, breakpointsLocation, responseCode) {
	if (responseCode == 1000) {
		
		var layoutSelectedArtboard = [selectedArtboard layout]
		var frameSelectedArtboard = [selectedArtboard frame]
		var breakpointsWidth = [[NSMutableArray alloc] init]

		for (var i = 0; i < numberOfBreakpoints; i++) {
			[breakpointsWidth addObject:[[alert viewAtIndex: i * 2 + 1] intValue]]
		}

		var breakpointsInfo = [[NSMutableDictionary alloc] init]
		[breakpointsInfo setObject:layoutSelectedArtboard forKey:@"originalLayout"]
		[breakpointsInfo setObject:[layoutSelectedArtboard numberOfColumns] forKey:@"numberOfColumns"]
		[breakpointsInfo setObject:[frameSelectedArtboard height] forKey:@"artboardHeight"]
		[breakpointsInfo setObject:[frameSelectedArtboard width] forKey:@"artboardWidth"]
		[breakpointsInfo setObject:[layoutSelectedArtboard totalWidth] forKey:@"layoutWidth"]
		[breakpointsInfo setObject:[layoutSelectedArtboard columnWidth] forKey:@"columnWidth"]
		[breakpointsInfo setObject:[frameSelectedArtboard x] forKey:@"xPosition"]
		[breakpointsInfo setObject:[frameSelectedArtboard y] forKey:@"yPosition"]
		[breakpointsInfo setObject:breakpointsLocation forKey:@"breakpointsLocation"]
		[breakpointsInfo setObject:breakpointsWidth forKey:@"breakpointsWidth"]

		generateBreakpoints(breakpointsInfo)
	}
}

function showBreakpointNumberDialog() {
	var alert = createAlertBase("PointGrid","Specify the number of breakpoints which you want to create.")

	var breakpointsSelect = createSelect([NSArray arrayWithObjects:@"One", @"Two", @"Three", @"Four", @"Five", @"Six", @"Seven", @"Eight", @"Nine", @"Ten", nil])
	[alert addTextLabelWithValue:"How many breakpoints do you want to create?:"]
  	[alert addAccessoryView: breakpointsSelect]

	var breakpointsLocationSelect = createSelect([NSArray arrayWithObjects:@"On the right of the original", @"Below the original", nil])
	[alert addTextLabelWithValue:"Where will you place the breakpoints?:"]
  	[alert addAccessoryView: breakpointsLocationSelect]

	[alert addButtonWithTitle:"OK"]
	[alert addButtonWithTitle:"Cancel"]

	var responseCode = [alert runModal]

	handleBreakpointNumberDialog(breakpointsSelect, breakpointsLocationSelect, responseCode)
}

function showBreakpointWidthDialog(breakpointsSelect, breakpointsLocationSelect) {
	var alert = createAlertBase("PointGrid","Specify the width of the breakpoints which you want to create.")

	var numberOfBreakpoints = [breakpointsSelect indexOfSelectedItem] + 1
	var breakpointsLocation = [breakpointsLocationSelect indexOfSelectedItem]

	for (var i = 0; i < numberOfBreakpoints; i++) {
		var control = createTextFieldWithIntValue("0")
		[alert addTextLabelWithValue:"Width of the breakpoint " + (i+1)]
		[alert addAccessoryView:control]
	}

	[alert addButtonWithTitle:"OK"]
	[alert addButtonWithTitle:"Cancel"]

	var responseCode = [alert runModal]

	handleBreakpointWidthDialogResponse(alert, numberOfBreakpoints, breakpointsLocation, responseCode)
}

function run() {

	if ([selection count] == 0) {
		showDialog("You must select an Artboard object which the plugin will use as default")
		return
	}

	selectedArtboard = [[selection objectEnumerator]nextObject]

	if ([selectedArtboard isKindOfClass:[MSArtboardGroup class]]) {
		if ([selectedArtboard layout] == null]) {
			showDialog("The selected Artboard object has not a defined layout")
		} else {
			showBreakpointNumberDialog()
		}
	} else {
		showDialog("The selected object is not an Artboard")
		return
	}
}

run()